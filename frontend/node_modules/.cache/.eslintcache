[{"/home/samuel/Documents/chatApp/frontend/src/index.js":"1","/home/samuel/Documents/chatApp/frontend/src/App.js":"2","/home/samuel/Documents/chatApp/frontend/src/pages/Chat.jsx":"3","/home/samuel/Documents/chatApp/frontend/src/pages/Signup.jsx":"4","/home/samuel/Documents/chatApp/frontend/src/pages/Login.jsx":"5","/home/samuel/Documents/chatApp/frontend/src/utils/Api.js":"6","/home/samuel/Documents/chatApp/frontend/src/components/Message.jsx":"7","/home/samuel/Documents/chatApp/frontend/src/pages/Profil.jsx":"8","/home/samuel/Documents/chatApp/frontend/src/components/Users.jsx":"9","/home/samuel/Documents/chatApp/frontend/src/components/Deconnect.jsx":"10","/home/samuel/Documents/chatApp/frontend/src/components/Welcome.jsx":"11"},{"size":257,"mtime":1667760712900,"results":"12","hashOfConfig":"13"},{"size":573,"mtime":1668714309950,"results":"14","hashOfConfig":"13"},{"size":11421,"mtime":1669017714315,"results":"15","hashOfConfig":"13"},{"size":6214,"mtime":1668964434427,"results":"16","hashOfConfig":"13"},{"size":5773,"mtime":1668964325725,"results":"17","hashOfConfig":"13"},{"size":264,"mtime":1668970613499,"results":"18","hashOfConfig":"13"},{"size":1546,"mtime":1668967695826,"results":"19","hashOfConfig":"13"},{"size":1429,"mtime":1669018374965,"results":"20","hashOfConfig":"13"},{"size":1007,"mtime":1668712790242,"results":"21","hashOfConfig":"13"},{"size":526,"mtime":1668710684766,"results":"22","hashOfConfig":"13"},{"size":346,"mtime":1668973365837,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1ntr54b",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/samuel/Documents/chatApp/frontend/src/index.js",[],[],[],"/home/samuel/Documents/chatApp/frontend/src/App.js",[],[],"/home/samuel/Documents/chatApp/frontend/src/pages/Chat.jsx",["59","60","61"],[],"/home/samuel/Documents/chatApp/frontend/src/pages/Signup.jsx",[],[],"/home/samuel/Documents/chatApp/frontend/src/pages/Login.jsx",[],[],"/home/samuel/Documents/chatApp/frontend/src/utils/Api.js",[],[],"/home/samuel/Documents/chatApp/frontend/src/components/Message.jsx",["62"],[],"import React from \"react\";\n\nconst Message = ({ messages, toId, currentId, toUser }) => {\n  return (\n    <>\n      <div class=\"flex flex-col h-full\">\n        <div class=\"grid grid-cols-12 gap-y-2\">\n          {messages &&\n            messages.map((mes, key) => {\n              if (mes.to === toId && mes.from === currentId) {\n                return (\n                  <div key={key} class=\"col-start-6 col-end-13  rounded-lg\">\n                    <div class=\"flex items-center justify-start flex-row-reverse gap-3 \">\n                      <div class=\"relative ml-3 text-sm bg-black py-2 px-4 shadow rounded-xl text-white\">\n                        <span className=\"text-[gray] text-sm\">Moi</span>\n                        <div>{mes.message}</div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              } else if (mes.to === currentId && mes.from === toId) {\n                const mymes = mes.message;\n                return (\n                  <div key={key} class=\"col-start-1 col-end-8  rounded-lg\">\n                    <div class=\"flex flex-row items-center\">\n                      <div class=\"relative ml-3 text-sm bg-white py-2 px-4 shadow rounded-xl text-black\">\n                        <span className=\"text-[gray] text-sm\">{toUser}</span>\n                        <div>{mymes}</div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              }\n            })}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Message;\n","/home/samuel/Documents/chatApp/frontend/src/pages/Profil.jsx",[],[],"/home/samuel/Documents/chatApp/frontend/src/components/Users.jsx",[],[],"/home/samuel/Documents/chatApp/frontend/src/components/Deconnect.jsx",[],[],"/home/samuel/Documents/chatApp/frontend/src/components/Welcome.jsx",[],[],{"ruleId":"63","severity":1,"message":"64","line":22,"column":10,"nodeType":"65","messageId":"66","endLine":22,"endColumn":22},{"ruleId":"63","severity":1,"message":"67","line":22,"column":24,"nodeType":"65","messageId":"66","endLine":22,"endColumn":39},{"ruleId":"68","severity":1,"message":"69","line":68,"column":6,"nodeType":"70","endLine":68,"endColumn":8,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":9,"column":37,"nodeType":"74","messageId":"75","endLine":9,"endColumn":39},"no-unused-vars","'conversation' is assigned a value but never used.","Identifier","unusedVar","'setConversation' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["76"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",{"desc":"77","fix":"78"},"Update the dependencies array to be: [navigate]",{"range":"79","text":"80"},[1967,1969],"[navigate]"]