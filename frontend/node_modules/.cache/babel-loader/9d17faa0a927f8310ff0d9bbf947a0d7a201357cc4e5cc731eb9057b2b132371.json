{"ast":null,"code":"const jwt = require(\"jsonwebtoken\");\nmodule.exports = (req, res, next) => {\n  try {\n    const token = req.headers.authorization.split(\" \")[1];\n    const decodedToken = jwt.verify(token, \"RANDOM_TOKEN_SECRET\");\n    const userId = decodedToken.userId;\n    req.auth = {\n      userId: userId\n    };\n    next();\n  } catch (error) {\n    res.status(401).json({\n      error\n    });\n  }\n};","map":{"version":3,"names":["jwt","require","module","exports","req","res","next","token","headers","authorization","split","decodedToken","verify","userId","auth","error","status","json"],"sources":["/home/samuel/Documents/chatApp/frontend/src/middleware/auth.js"],"sourcesContent":["const jwt = require(\"jsonwebtoken\");\n\nmodule.exports = (req, res, next) => {\n  try {\n    const token = req.headers.authorization.split(\" \")[1];\n    const decodedToken = jwt.verify(token, \"RANDOM_TOKEN_SECRET\");\n    const userId = decodedToken.userId;\n    req.auth = {\n      userId: userId,\n    };\n    next();\n  } catch (error) {\n    res.status(401).json({ error });\n  }\n};\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,cAAc,CAAC;AAEnCC,MAAM,CAACC,OAAO,GAAG,CAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EACnC,IAAI;IACF,MAAMC,KAAK,GAAGH,GAAG,CAACI,OAAO,CAACC,aAAa,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACrD,MAAMC,YAAY,GAAGX,GAAG,CAACY,MAAM,CAACL,KAAK,EAAE,qBAAqB,CAAC;IAC7D,MAAMM,MAAM,GAAGF,YAAY,CAACE,MAAM;IAClCT,GAAG,CAACU,IAAI,GAAG;MACTD,MAAM,EAAEA;IACV,CAAC;IACDP,IAAI,EAAE;EACR,CAAC,CAAC,OAAOS,KAAK,EAAE;IACdV,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEF;IAAM,CAAC,CAAC;EACjC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}