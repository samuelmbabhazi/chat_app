{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Namespace = exports.Socket = exports.Server = void 0;\nconst http = require(\"http\");\nconst fs_1 = require(\"fs\");\nconst zlib_1 = require(\"zlib\");\nconst accepts = require(\"accepts\");\nconst stream_1 = require(\"stream\");\nconst path = require(\"path\");\nconst engine_io_1 = require(\"engine.io\");\nconst client_1 = require(\"./client\");\nconst events_1 = require(\"events\");\nconst namespace_1 = require(\"./namespace\");\nObject.defineProperty(exports, \"Namespace\", {\n  enumerable: true,\n  get: function () {\n    return namespace_1.Namespace;\n  }\n});\nconst parent_namespace_1 = require(\"./parent-namespace\");\nconst socket_io_adapter_1 = require(\"socket.io-adapter\");\nconst parser = __importStar(require(\"socket.io-parser\"));\nconst debug_1 = __importDefault(require(\"debug\"));\nconst socket_1 = require(\"./socket\");\nObject.defineProperty(exports, \"Socket\", {\n  enumerable: true,\n  get: function () {\n    return socket_1.Socket;\n  }\n});\nconst typed_events_1 = require(\"./typed-events\");\nconst uws_1 = require(\"./uws\");\nconst debug = (0, debug_1.default)(\"socket.io:server\");\nconst clientVersion = require(\"../package.json\").version;\nconst dotMapRegex = /\\.map/;\n/**\n * Represents a Socket.IO server.\n *\n * @example\n * import { Server } from \"socket.io\";\n *\n * const io = new Server();\n *\n * io.on(\"connection\", (socket) => {\n *   console.log(`socket ${socket.id} connected`);\n *\n *   // send an event to the client\n *   socket.emit(\"foo\", \"bar\");\n *\n *   socket.on(\"foobar\", () => {\n *     // an event was received from the client\n *   });\n *\n *   // upon disconnection\n *   socket.on(\"disconnect\", (reason) => {\n *     console.log(`socket ${socket.id} disconnected due to ${reason}`);\n *   });\n * });\n *\n * io.listen(3000);\n */\nclass Server extends typed_events_1.StrictEventEmitter {\n  constructor(srv) {\n    let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    /**\n     * @private\n     */\n    this._nsps = new Map();\n    this.parentNsps = new Map();\n    if (\"object\" === typeof srv && srv instanceof Object && !srv.listen) {\n      opts = srv;\n      srv = undefined;\n    }\n    this.path(opts.path || \"/socket.io\");\n    this.connectTimeout(opts.connectTimeout || 45000);\n    this.serveClient(false !== opts.serveClient);\n    this._parser = opts.parser || parser;\n    this.encoder = new this._parser.Encoder();\n    this.adapter(opts.adapter || socket_io_adapter_1.Adapter);\n    this.sockets = this.of(\"/\");\n    this.opts = opts;\n    if (srv || typeof srv == \"number\") this.attach(srv);\n  }\n  serveClient(v) {\n    if (!arguments.length) return this._serveClient;\n    this._serveClient = v;\n    return this;\n  }\n  /**\n   * Executes the middleware for an incoming namespace not already created on the server.\n   *\n   * @param name - name of incoming namespace\n   * @param auth - the auth parameters\n   * @param fn - callback\n   *\n   * @private\n   */\n  _checkNamespace(name, auth, fn) {\n    if (this.parentNsps.size === 0) return fn(false);\n    const keysIterator = this.parentNsps.keys();\n    const run = () => {\n      const nextFn = keysIterator.next();\n      if (nextFn.done) {\n        return fn(false);\n      }\n      nextFn.value(name, auth, (err, allow) => {\n        if (err || !allow) {\n          return run();\n        }\n        if (this._nsps.has(name)) {\n          // the namespace was created in the meantime\n          debug(\"dynamic namespace %s already exists\", name);\n          return fn(this._nsps.get(name));\n        }\n        const namespace = this.parentNsps.get(nextFn.value).createChild(name);\n        debug(\"dynamic namespace %s was created\", name);\n        // @ts-ignore\n        this.sockets.emitReserved(\"new_namespace\", namespace);\n        fn(namespace);\n      });\n    };\n    run();\n  }\n  path(v) {\n    if (!arguments.length) return this._path;\n    this._path = v.replace(/\\/$/, \"\");\n    const escapedPath = this._path.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n    this.clientPathRegex = new RegExp(\"^\" + escapedPath + \"/socket\\\\.io(\\\\.msgpack|\\\\.esm)?(\\\\.min)?\\\\.js(\\\\.map)?(?:\\\\?|$)\");\n    return this;\n  }\n  connectTimeout(v) {\n    if (v === undefined) return this._connectTimeout;\n    this._connectTimeout = v;\n    return this;\n  }\n  adapter(v) {\n    if (!arguments.length) return this._adapter;\n    this._adapter = v;\n    for (const nsp of this._nsps.values()) {\n      nsp._initAdapter();\n    }\n    return this;\n  }\n  /**\n   * Attaches socket.io to a server or port.\n   *\n   * @param srv - server or port\n   * @param opts - options passed to engine.io\n   * @return self\n   */\n  listen(srv) {\n    let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.attach(srv, opts);\n  }\n  /**\n   * Attaches socket.io to a server or port.\n   *\n   * @param srv - server or port\n   * @param opts - options passed to engine.io\n   * @return self\n   */\n  attach(srv) {\n    let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (\"function\" == typeof srv) {\n      const msg = \"You are trying to attach socket.io to an express \" + \"request handler function. Please pass a http.Server instance.\";\n      throw new Error(msg);\n    }\n    // handle a port as a string\n    if (Number(srv) == srv) {\n      srv = Number(srv);\n    }\n    if (\"number\" == typeof srv) {\n      debug(\"creating http server and binding to %d\", srv);\n      const port = srv;\n      srv = http.createServer((req, res) => {\n        res.writeHead(404);\n        res.end();\n      });\n      srv.listen(port);\n    }\n    // merge the options passed to the Socket.IO server\n    Object.assign(opts, this.opts);\n    // set engine.io path to `/socket.io`\n    opts.path = opts.path || this._path;\n    this.initEngine(srv, opts);\n    return this;\n  }\n  attachApp(app /*: TemplatedApp */) {\n    let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    // merge the options passed to the Socket.IO server\n    Object.assign(opts, this.opts);\n    // set engine.io path to `/socket.io`\n    opts.path = opts.path || this._path;\n    // initialize engine\n    debug(\"creating uWebSockets.js-based engine with opts %j\", opts);\n    const engine = new engine_io_1.uServer(opts);\n    engine.attach(app, opts);\n    // bind to engine events\n    this.bind(engine);\n    if (this._serveClient) {\n      // attach static file serving\n      app.get(`${this._path}/*`, (res, req) => {\n        if (!this.clientPathRegex.test(req.getUrl())) {\n          req.setYield(true);\n          return;\n        }\n        const filename = req.getUrl().replace(this._path, \"\").replace(/\\?.*$/, \"\").replace(/^\\//, \"\");\n        const isMap = dotMapRegex.test(filename);\n        const type = isMap ? \"map\" : \"source\";\n        // Per the standard, ETags must be quoted:\n        // https://tools.ietf.org/html/rfc7232#section-2.3\n        const expectedEtag = '\"' + clientVersion + '\"';\n        const weakEtag = \"W/\" + expectedEtag;\n        const etag = req.getHeader(\"if-none-match\");\n        if (etag) {\n          if (expectedEtag === etag || weakEtag === etag) {\n            debug(\"serve client %s 304\", type);\n            res.writeStatus(\"304 Not Modified\");\n            res.end();\n            return;\n          }\n        }\n        debug(\"serve client %s\", type);\n        res.writeHeader(\"cache-control\", \"public, max-age=0\");\n        res.writeHeader(\"content-type\", \"application/\" + (isMap ? \"json\" : \"javascript\"));\n        res.writeHeader(\"etag\", expectedEtag);\n        const filepath = path.join(__dirname, \"../client-dist/\", filename);\n        (0, uws_1.serveFile)(res, filepath);\n      });\n    }\n    (0, uws_1.patchAdapter)(app);\n  }\n  /**\n   * Initialize engine\n   *\n   * @param srv - the server to attach to\n   * @param opts - options passed to engine.io\n   * @private\n   */\n  initEngine(srv, opts) {\n    // initialize engine\n    debug(\"creating engine.io instance with opts %j\", opts);\n    this.eio = (0, engine_io_1.attach)(srv, opts);\n    // attach static file serving\n    if (this._serveClient) this.attachServe(srv);\n    // Export http server\n    this.httpServer = srv;\n    // bind to engine events\n    this.bind(this.eio);\n  }\n  /**\n   * Attaches the static file serving.\n   *\n   * @param srv http server\n   * @private\n   */\n  attachServe(srv) {\n    debug(\"attaching client serving req handler\");\n    const evs = srv.listeners(\"request\").slice(0);\n    srv.removeAllListeners(\"request\");\n    srv.on(\"request\", (req, res) => {\n      if (this.clientPathRegex.test(req.url)) {\n        this.serve(req, res);\n      } else {\n        for (let i = 0; i < evs.length; i++) {\n          evs[i].call(srv, req, res);\n        }\n      }\n    });\n  }\n  /**\n   * Handles a request serving of client source and map\n   *\n   * @param req\n   * @param res\n   * @private\n   */\n  serve(req, res) {\n    const filename = req.url.replace(this._path, \"\").replace(/\\?.*$/, \"\");\n    const isMap = dotMapRegex.test(filename);\n    const type = isMap ? \"map\" : \"source\";\n    // Per the standard, ETags must be quoted:\n    // https://tools.ietf.org/html/rfc7232#section-2.3\n    const expectedEtag = '\"' + clientVersion + '\"';\n    const weakEtag = \"W/\" + expectedEtag;\n    const etag = req.headers[\"if-none-match\"];\n    if (etag) {\n      if (expectedEtag === etag || weakEtag === etag) {\n        debug(\"serve client %s 304\", type);\n        res.writeHead(304);\n        res.end();\n        return;\n      }\n    }\n    debug(\"serve client %s\", type);\n    res.setHeader(\"Cache-Control\", \"public, max-age=0\");\n    res.setHeader(\"Content-Type\", \"application/\" + (isMap ? \"json\" : \"javascript\"));\n    res.setHeader(\"ETag\", expectedEtag);\n    Server.sendFile(filename, req, res);\n  }\n  /**\n   * @param filename\n   * @param req\n   * @param res\n   * @private\n   */\n  static sendFile(filename, req, res) {\n    const readStream = (0, fs_1.createReadStream)(path.join(__dirname, \"../client-dist/\", filename));\n    const encoding = accepts(req).encodings([\"br\", \"gzip\", \"deflate\"]);\n    const onError = err => {\n      if (err) {\n        res.end();\n      }\n    };\n    switch (encoding) {\n      case \"br\":\n        res.writeHead(200, {\n          \"content-encoding\": \"br\"\n        });\n        readStream.pipe((0, zlib_1.createBrotliCompress)()).pipe(res);\n        (0, stream_1.pipeline)(readStream, (0, zlib_1.createBrotliCompress)(), res, onError);\n        break;\n      case \"gzip\":\n        res.writeHead(200, {\n          \"content-encoding\": \"gzip\"\n        });\n        (0, stream_1.pipeline)(readStream, (0, zlib_1.createGzip)(), res, onError);\n        break;\n      case \"deflate\":\n        res.writeHead(200, {\n          \"content-encoding\": \"deflate\"\n        });\n        (0, stream_1.pipeline)(readStream, (0, zlib_1.createDeflate)(), res, onError);\n        break;\n      default:\n        res.writeHead(200);\n        (0, stream_1.pipeline)(readStream, res, onError);\n    }\n  }\n  /**\n   * Binds socket.io to an engine.io instance.\n   *\n   * @param {engine.Server} engine engine.io (or compatible) server\n   * @return self\n   */\n  bind(engine) {\n    this.engine = engine;\n    this.engine.on(\"connection\", this.onconnection.bind(this));\n    return this;\n  }\n  /**\n   * Called with each incoming transport connection.\n   *\n   * @param {engine.Socket} conn\n   * @return self\n   * @private\n   */\n  onconnection(conn) {\n    debug(\"incoming connection with id %s\", conn.id);\n    const client = new client_1.Client(this, conn);\n    if (conn.protocol === 3) {\n      // @ts-ignore\n      client.connect(\"/\");\n    }\n    return this;\n  }\n  /**\n   * Looks up a namespace.\n   *\n   * @example\n   * // with a simple string\n   * const myNamespace = io.of(\"/my-namespace\");\n   *\n   * // with a regex\n   * const dynamicNsp = io.of(/^\\/dynamic-\\d+$/).on(\"connection\", (socket) => {\n   *   const namespace = socket.nsp; // newNamespace.name === \"/dynamic-101\"\n   *\n   *   // broadcast to all clients in the given sub-namespace\n   *   namespace.emit(\"hello\");\n   * });\n   *\n   * @param name - nsp name\n   * @param fn optional, nsp `connection` ev handler\n   */\n  of(name, fn) {\n    if (typeof name === \"function\" || name instanceof RegExp) {\n      const parentNsp = new parent_namespace_1.ParentNamespace(this);\n      debug(\"initializing parent namespace %s\", parentNsp.name);\n      if (typeof name === \"function\") {\n        this.parentNsps.set(name, parentNsp);\n      } else {\n        this.parentNsps.set((nsp, conn, next) => next(null, name.test(nsp)), parentNsp);\n      }\n      if (fn) {\n        // @ts-ignore\n        parentNsp.on(\"connect\", fn);\n      }\n      return parentNsp;\n    }\n    if (String(name)[0] !== \"/\") name = \"/\" + name;\n    let nsp = this._nsps.get(name);\n    if (!nsp) {\n      debug(\"initializing namespace %s\", name);\n      nsp = new namespace_1.Namespace(this, name);\n      this._nsps.set(name, nsp);\n      if (name !== \"/\") {\n        // @ts-ignore\n        this.sockets.emitReserved(\"new_namespace\", nsp);\n      }\n    }\n    if (fn) nsp.on(\"connect\", fn);\n    return nsp;\n  }\n  /**\n   * Closes server connection\n   *\n   * @param [fn] optional, called as `fn([err])` on error OR all conns closed\n   */\n  close(fn) {\n    for (const socket of this.sockets.sockets.values()) {\n      socket._onclose(\"server shutting down\");\n    }\n    this.engine.close();\n    // restore the Adapter prototype\n    (0, uws_1.restoreAdapter)();\n    if (this.httpServer) {\n      this.httpServer.close(fn);\n    } else {\n      fn && fn();\n    }\n  }\n  /**\n   * Registers a middleware, which is a function that gets executed for every incoming {@link Socket}.\n   *\n   * @example\n   * io.use((socket, next) => {\n   *   // ...\n   *   next();\n   * });\n   *\n   * @param fn - the middleware function\n   */\n  use(fn) {\n    this.sockets.use(fn);\n    return this;\n  }\n  /**\n   * Targets a room when emitting.\n   *\n   * @example\n   * // the “foo” event will be broadcast to all connected clients in the “room-101” room\n   * io.to(\"room-101\").emit(\"foo\", \"bar\");\n   *\n   * // with an array of rooms (a client will be notified at most once)\n   * io.to([\"room-101\", \"room-102\"]).emit(\"foo\", \"bar\");\n   *\n   * // with multiple chained calls\n   * io.to(\"room-101\").to(\"room-102\").emit(\"foo\", \"bar\");\n   *\n   * @param room - a room, or an array of rooms\n   * @return a new {@link BroadcastOperator} instance for chaining\n   */\n  to(room) {\n    return this.sockets.to(room);\n  }\n  /**\n   * Targets a room when emitting. Similar to `to()`, but might feel clearer in some cases:\n   *\n   * @example\n   * // disconnect all clients in the \"room-101\" room\n   * io.in(\"room-101\").disconnectSockets();\n   *\n   * @param room - a room, or an array of rooms\n   * @return a new {@link BroadcastOperator} instance for chaining\n   */\n  in(room) {\n    return this.sockets.in(room);\n  }\n  /**\n   * Excludes a room when emitting.\n   *\n   * @example\n   * // the \"foo\" event will be broadcast to all connected clients, except the ones that are in the \"room-101\" room\n   * io.except(\"room-101\").emit(\"foo\", \"bar\");\n   *\n   * // with an array of rooms\n   * io.except([\"room-101\", \"room-102\"]).emit(\"foo\", \"bar\");\n   *\n   * // with multiple chained calls\n   * io.except(\"room-101\").except(\"room-102\").emit(\"foo\", \"bar\");\n   *\n   * @param room - a room, or an array of rooms\n   * @return a new {@link BroadcastOperator} instance for chaining\n   */\n  except(room) {\n    return this.sockets.except(room);\n  }\n  /**\n   * Sends a `message` event to all clients.\n   *\n   * This method mimics the WebSocket.send() method.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n   *\n   * @example\n   * io.send(\"hello\");\n   *\n   * // this is equivalent to\n   * io.emit(\"message\", \"hello\");\n   *\n   * @return self\n   */\n  send() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    this.sockets.emit(\"message\", ...args);\n    return this;\n  }\n  /**\n   * Sends a `message` event to all clients. Alias of {@link send}.\n   *\n   * @return self\n   */\n  write() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    this.sockets.emit(\"message\", ...args);\n    return this;\n  }\n  /**\n   * Sends a message to the other Socket.IO servers of the cluster.\n   *\n   * @example\n   * io.serverSideEmit(\"hello\", \"world\");\n   *\n   * io.on(\"hello\", (arg1) => {\n   *   console.log(arg1); // prints \"world\"\n   * });\n   *\n   * // acknowledgements (without binary content) are supported too:\n   * io.serverSideEmit(\"ping\", (err, responses) => {\n   *  if (err) {\n   *     // some clients did not acknowledge the event in the given delay\n   *   } else {\n   *     console.log(responses); // one response per client\n   *   }\n   * });\n   *\n   * io.on(\"ping\", (cb) => {\n   *   cb(\"pong\");\n   * });\n   *\n   * @param ev - the event name\n   * @param args - an array of arguments, which may include an acknowledgement callback at the end\n   */\n  serverSideEmit(ev) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n    return this.sockets.serverSideEmit(ev, ...args);\n  }\n  /**\n   * Gets a list of socket ids.\n   *\n   * @deprecated this method will be removed in the next major release, please use {@link Server#serverSideEmit} or\n   * {@link Server#fetchSockets} instead.\n   */\n  allSockets() {\n    return this.sockets.allSockets();\n  }\n  /**\n   * Sets the compress flag.\n   *\n   * @example\n   * io.compress(false).emit(\"hello\");\n   *\n   * @param compress - if `true`, compresses the sending data\n   * @return a new {@link BroadcastOperator} instance for chaining\n   */\n  compress(compress) {\n    return this.sockets.compress(compress);\n  }\n  /**\n   * Sets a modifier for a subsequent event emission that the event data may be lost if the client is not ready to\n   * receive messages (because of network slowness or other issues, or because they’re connected through long polling\n   * and is in the middle of a request-response cycle).\n   *\n   * @example\n   * io.volatile.emit(\"hello\"); // the clients may or may not receive it\n   *\n   * @return a new {@link BroadcastOperator} instance for chaining\n   */\n  get volatile() {\n    return this.sockets.volatile;\n  }\n  /**\n   * Sets a modifier for a subsequent event emission that the event data will only be broadcast to the current node.\n   *\n   * @example\n   * // the “foo” event will be broadcast to all connected clients on this node\n   * io.local.emit(\"foo\", \"bar\");\n   *\n   * @return a new {@link BroadcastOperator} instance for chaining\n   */\n  get local() {\n    return this.sockets.local;\n  }\n  /**\n   * Adds a timeout in milliseconds for the next operation.\n   *\n   * @example\n   * io.timeout(1000).emit(\"some-event\", (err, responses) => {\n   *   if (err) {\n   *     // some clients did not acknowledge the event in the given delay\n   *   } else {\n   *     console.log(responses); // one response per client\n   *   }\n   * });\n   *\n   * @param timeout\n   */\n  timeout(timeout) {\n    return this.sockets.timeout(timeout);\n  }\n  /**\n   * Returns the matching socket instances.\n   *\n   * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n   *\n   * @example\n   * // return all Socket instances\n   * const sockets = await io.fetchSockets();\n   *\n   * // return all Socket instances in the \"room1\" room\n   * const sockets = await io.in(\"room1\").fetchSockets();\n   *\n   * for (const socket of sockets) {\n   *   console.log(socket.id);\n   *   console.log(socket.handshake);\n   *   console.log(socket.rooms);\n   *   console.log(socket.data);\n   *\n   *   socket.emit(\"hello\");\n   *   socket.join(\"room1\");\n   *   socket.leave(\"room2\");\n   *   socket.disconnect();\n   * }\n   */\n  fetchSockets() {\n    return this.sockets.fetchSockets();\n  }\n  /**\n   * Makes the matching socket instances join the specified rooms.\n   *\n   * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n   *\n   * @example\n   *\n   * // make all socket instances join the \"room1\" room\n   * io.socketsJoin(\"room1\");\n   *\n   * // make all socket instances in the \"room1\" room join the \"room2\" and \"room3\" rooms\n   * io.in(\"room1\").socketsJoin([\"room2\", \"room3\"]);\n   *\n   * @param room - a room, or an array of rooms\n   */\n  socketsJoin(room) {\n    return this.sockets.socketsJoin(room);\n  }\n  /**\n   * Makes the matching socket instances leave the specified rooms.\n   *\n   * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n   *\n   * @example\n   * // make all socket instances leave the \"room1\" room\n   * io.socketsLeave(\"room1\");\n   *\n   * // make all socket instances in the \"room1\" room leave the \"room2\" and \"room3\" rooms\n   * io.in(\"room1\").socketsLeave([\"room2\", \"room3\"]);\n   *\n   * @param room - a room, or an array of rooms\n   */\n  socketsLeave(room) {\n    return this.sockets.socketsLeave(room);\n  }\n  /**\n   * Makes the matching socket instances disconnect.\n   *\n   * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n   *\n   * @example\n   * // make all socket instances disconnect (the connections might be kept alive for other namespaces)\n   * io.disconnectSockets();\n   *\n   * // make all socket instances in the \"room1\" room disconnect and close the underlying connections\n   * io.in(\"room1\").disconnectSockets(true);\n   *\n   * @param close - whether to close the underlying connection\n   */\n  disconnectSockets() {\n    let close = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return this.sockets.disconnectSockets(close);\n  }\n}\nexports.Server = Server;\n/**\n * Expose main namespace (/).\n */\nconst emitterMethods = Object.keys(events_1.EventEmitter.prototype).filter(function (key) {\n  return typeof events_1.EventEmitter.prototype[key] === \"function\";\n});\nemitterMethods.forEach(function (fn) {\n  Server.prototype[fn] = function () {\n    return this.sockets[fn].apply(this.sockets, arguments);\n  };\n});\nmodule.exports = (srv, opts) => new Server(srv, opts);\nmodule.exports.Server = Server;\nmodule.exports.Namespace = namespace_1.Namespace;\nmodule.exports.Socket = socket_1.Socket;\nvar socket_2 = require(\"./socket\");","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__importDefault","exports","Namespace","Socket","Server","http","require","fs_1","zlib_1","accepts","stream_1","path","engine_io_1","client_1","events_1","namespace_1","parent_namespace_1","socket_io_adapter_1","parser","debug_1","socket_1","typed_events_1","uws_1","debug","default","clientVersion","version","dotMapRegex","StrictEventEmitter","constructor","srv","opts","_nsps","Map","parentNsps","listen","connectTimeout","serveClient","_parser","encoder","Encoder","adapter","Adapter","sockets","of","attach","arguments","length","_serveClient","_checkNamespace","name","auth","fn","size","keysIterator","keys","run","nextFn","next","done","err","allow","has","namespace","createChild","emitReserved","_path","replace","escapedPath","clientPathRegex","RegExp","_connectTimeout","_adapter","nsp","values","_initAdapter","msg","Error","Number","port","createServer","req","res","writeHead","end","assign","initEngine","attachApp","app","engine","uServer","bind","test","getUrl","setYield","filename","isMap","type","expectedEtag","weakEtag","etag","getHeader","writeStatus","writeHeader","filepath","join","__dirname","serveFile","patchAdapter","eio","attachServe","httpServer","evs","listeners","slice","removeAllListeners","on","url","serve","i","headers","setHeader","sendFile","readStream","createReadStream","encoding","encodings","onError","pipe","createBrotliCompress","pipeline","createGzip","createDeflate","onconnection","conn","id","client","Client","protocol","connect","parentNsp","ParentNamespace","set","String","close","socket","_onclose","restoreAdapter","use","to","room","in","except","send","args","emit","write","serverSideEmit","ev","allSockets","compress","volatile","local","timeout","fetchSockets","socketsJoin","socketsLeave","disconnectSockets","emitterMethods","EventEmitter","filter","key","forEach","apply","module","socket_2"],"sources":["/home/samuel/Documents/chatApp/node_modules/socket.io/dist/index.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Namespace = exports.Socket = exports.Server = void 0;\nconst http = require(\"http\");\nconst fs_1 = require(\"fs\");\nconst zlib_1 = require(\"zlib\");\nconst accepts = require(\"accepts\");\nconst stream_1 = require(\"stream\");\nconst path = require(\"path\");\nconst engine_io_1 = require(\"engine.io\");\nconst client_1 = require(\"./client\");\nconst events_1 = require(\"events\");\nconst namespace_1 = require(\"./namespace\");\nObject.defineProperty(exports, \"Namespace\", { enumerable: true, get: function () { return namespace_1.Namespace; } });\nconst parent_namespace_1 = require(\"./parent-namespace\");\nconst socket_io_adapter_1 = require(\"socket.io-adapter\");\nconst parser = __importStar(require(\"socket.io-parser\"));\nconst debug_1 = __importDefault(require(\"debug\"));\nconst socket_1 = require(\"./socket\");\nObject.defineProperty(exports, \"Socket\", { enumerable: true, get: function () { return socket_1.Socket; } });\nconst typed_events_1 = require(\"./typed-events\");\nconst uws_1 = require(\"./uws\");\nconst debug = (0, debug_1.default)(\"socket.io:server\");\nconst clientVersion = require(\"../package.json\").version;\nconst dotMapRegex = /\\.map/;\n/**\n * Represents a Socket.IO server.\n *\n * @example\n * import { Server } from \"socket.io\";\n *\n * const io = new Server();\n *\n * io.on(\"connection\", (socket) => {\n *   console.log(`socket ${socket.id} connected`);\n *\n *   // send an event to the client\n *   socket.emit(\"foo\", \"bar\");\n *\n *   socket.on(\"foobar\", () => {\n *     // an event was received from the client\n *   });\n *\n *   // upon disconnection\n *   socket.on(\"disconnect\", (reason) => {\n *     console.log(`socket ${socket.id} disconnected due to ${reason}`);\n *   });\n * });\n *\n * io.listen(3000);\n */\nclass Server extends typed_events_1.StrictEventEmitter {\n    constructor(srv, opts = {}) {\n        super();\n        /**\n         * @private\n         */\n        this._nsps = new Map();\n        this.parentNsps = new Map();\n        if (\"object\" === typeof srv &&\n            srv instanceof Object &&\n            !srv.listen) {\n            opts = srv;\n            srv = undefined;\n        }\n        this.path(opts.path || \"/socket.io\");\n        this.connectTimeout(opts.connectTimeout || 45000);\n        this.serveClient(false !== opts.serveClient);\n        this._parser = opts.parser || parser;\n        this.encoder = new this._parser.Encoder();\n        this.adapter(opts.adapter || socket_io_adapter_1.Adapter);\n        this.sockets = this.of(\"/\");\n        this.opts = opts;\n        if (srv || typeof srv == \"number\")\n            this.attach(srv);\n    }\n    serveClient(v) {\n        if (!arguments.length)\n            return this._serveClient;\n        this._serveClient = v;\n        return this;\n    }\n    /**\n     * Executes the middleware for an incoming namespace not already created on the server.\n     *\n     * @param name - name of incoming namespace\n     * @param auth - the auth parameters\n     * @param fn - callback\n     *\n     * @private\n     */\n    _checkNamespace(name, auth, fn) {\n        if (this.parentNsps.size === 0)\n            return fn(false);\n        const keysIterator = this.parentNsps.keys();\n        const run = () => {\n            const nextFn = keysIterator.next();\n            if (nextFn.done) {\n                return fn(false);\n            }\n            nextFn.value(name, auth, (err, allow) => {\n                if (err || !allow) {\n                    return run();\n                }\n                if (this._nsps.has(name)) {\n                    // the namespace was created in the meantime\n                    debug(\"dynamic namespace %s already exists\", name);\n                    return fn(this._nsps.get(name));\n                }\n                const namespace = this.parentNsps.get(nextFn.value).createChild(name);\n                debug(\"dynamic namespace %s was created\", name);\n                // @ts-ignore\n                this.sockets.emitReserved(\"new_namespace\", namespace);\n                fn(namespace);\n            });\n        };\n        run();\n    }\n    path(v) {\n        if (!arguments.length)\n            return this._path;\n        this._path = v.replace(/\\/$/, \"\");\n        const escapedPath = this._path.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n        this.clientPathRegex = new RegExp(\"^\" +\n            escapedPath +\n            \"/socket\\\\.io(\\\\.msgpack|\\\\.esm)?(\\\\.min)?\\\\.js(\\\\.map)?(?:\\\\?|$)\");\n        return this;\n    }\n    connectTimeout(v) {\n        if (v === undefined)\n            return this._connectTimeout;\n        this._connectTimeout = v;\n        return this;\n    }\n    adapter(v) {\n        if (!arguments.length)\n            return this._adapter;\n        this._adapter = v;\n        for (const nsp of this._nsps.values()) {\n            nsp._initAdapter();\n        }\n        return this;\n    }\n    /**\n     * Attaches socket.io to a server or port.\n     *\n     * @param srv - server or port\n     * @param opts - options passed to engine.io\n     * @return self\n     */\n    listen(srv, opts = {}) {\n        return this.attach(srv, opts);\n    }\n    /**\n     * Attaches socket.io to a server or port.\n     *\n     * @param srv - server or port\n     * @param opts - options passed to engine.io\n     * @return self\n     */\n    attach(srv, opts = {}) {\n        if (\"function\" == typeof srv) {\n            const msg = \"You are trying to attach socket.io to an express \" +\n                \"request handler function. Please pass a http.Server instance.\";\n            throw new Error(msg);\n        }\n        // handle a port as a string\n        if (Number(srv) == srv) {\n            srv = Number(srv);\n        }\n        if (\"number\" == typeof srv) {\n            debug(\"creating http server and binding to %d\", srv);\n            const port = srv;\n            srv = http.createServer((req, res) => {\n                res.writeHead(404);\n                res.end();\n            });\n            srv.listen(port);\n        }\n        // merge the options passed to the Socket.IO server\n        Object.assign(opts, this.opts);\n        // set engine.io path to `/socket.io`\n        opts.path = opts.path || this._path;\n        this.initEngine(srv, opts);\n        return this;\n    }\n    attachApp(app /*: TemplatedApp */, opts = {}) {\n        // merge the options passed to the Socket.IO server\n        Object.assign(opts, this.opts);\n        // set engine.io path to `/socket.io`\n        opts.path = opts.path || this._path;\n        // initialize engine\n        debug(\"creating uWebSockets.js-based engine with opts %j\", opts);\n        const engine = new engine_io_1.uServer(opts);\n        engine.attach(app, opts);\n        // bind to engine events\n        this.bind(engine);\n        if (this._serveClient) {\n            // attach static file serving\n            app.get(`${this._path}/*`, (res, req) => {\n                if (!this.clientPathRegex.test(req.getUrl())) {\n                    req.setYield(true);\n                    return;\n                }\n                const filename = req\n                    .getUrl()\n                    .replace(this._path, \"\")\n                    .replace(/\\?.*$/, \"\")\n                    .replace(/^\\//, \"\");\n                const isMap = dotMapRegex.test(filename);\n                const type = isMap ? \"map\" : \"source\";\n                // Per the standard, ETags must be quoted:\n                // https://tools.ietf.org/html/rfc7232#section-2.3\n                const expectedEtag = '\"' + clientVersion + '\"';\n                const weakEtag = \"W/\" + expectedEtag;\n                const etag = req.getHeader(\"if-none-match\");\n                if (etag) {\n                    if (expectedEtag === etag || weakEtag === etag) {\n                        debug(\"serve client %s 304\", type);\n                        res.writeStatus(\"304 Not Modified\");\n                        res.end();\n                        return;\n                    }\n                }\n                debug(\"serve client %s\", type);\n                res.writeHeader(\"cache-control\", \"public, max-age=0\");\n                res.writeHeader(\"content-type\", \"application/\" + (isMap ? \"json\" : \"javascript\"));\n                res.writeHeader(\"etag\", expectedEtag);\n                const filepath = path.join(__dirname, \"../client-dist/\", filename);\n                (0, uws_1.serveFile)(res, filepath);\n            });\n        }\n        (0, uws_1.patchAdapter)(app);\n    }\n    /**\n     * Initialize engine\n     *\n     * @param srv - the server to attach to\n     * @param opts - options passed to engine.io\n     * @private\n     */\n    initEngine(srv, opts) {\n        // initialize engine\n        debug(\"creating engine.io instance with opts %j\", opts);\n        this.eio = (0, engine_io_1.attach)(srv, opts);\n        // attach static file serving\n        if (this._serveClient)\n            this.attachServe(srv);\n        // Export http server\n        this.httpServer = srv;\n        // bind to engine events\n        this.bind(this.eio);\n    }\n    /**\n     * Attaches the static file serving.\n     *\n     * @param srv http server\n     * @private\n     */\n    attachServe(srv) {\n        debug(\"attaching client serving req handler\");\n        const evs = srv.listeners(\"request\").slice(0);\n        srv.removeAllListeners(\"request\");\n        srv.on(\"request\", (req, res) => {\n            if (this.clientPathRegex.test(req.url)) {\n                this.serve(req, res);\n            }\n            else {\n                for (let i = 0; i < evs.length; i++) {\n                    evs[i].call(srv, req, res);\n                }\n            }\n        });\n    }\n    /**\n     * Handles a request serving of client source and map\n     *\n     * @param req\n     * @param res\n     * @private\n     */\n    serve(req, res) {\n        const filename = req.url.replace(this._path, \"\").replace(/\\?.*$/, \"\");\n        const isMap = dotMapRegex.test(filename);\n        const type = isMap ? \"map\" : \"source\";\n        // Per the standard, ETags must be quoted:\n        // https://tools.ietf.org/html/rfc7232#section-2.3\n        const expectedEtag = '\"' + clientVersion + '\"';\n        const weakEtag = \"W/\" + expectedEtag;\n        const etag = req.headers[\"if-none-match\"];\n        if (etag) {\n            if (expectedEtag === etag || weakEtag === etag) {\n                debug(\"serve client %s 304\", type);\n                res.writeHead(304);\n                res.end();\n                return;\n            }\n        }\n        debug(\"serve client %s\", type);\n        res.setHeader(\"Cache-Control\", \"public, max-age=0\");\n        res.setHeader(\"Content-Type\", \"application/\" + (isMap ? \"json\" : \"javascript\"));\n        res.setHeader(\"ETag\", expectedEtag);\n        Server.sendFile(filename, req, res);\n    }\n    /**\n     * @param filename\n     * @param req\n     * @param res\n     * @private\n     */\n    static sendFile(filename, req, res) {\n        const readStream = (0, fs_1.createReadStream)(path.join(__dirname, \"../client-dist/\", filename));\n        const encoding = accepts(req).encodings([\"br\", \"gzip\", \"deflate\"]);\n        const onError = (err) => {\n            if (err) {\n                res.end();\n            }\n        };\n        switch (encoding) {\n            case \"br\":\n                res.writeHead(200, { \"content-encoding\": \"br\" });\n                readStream.pipe((0, zlib_1.createBrotliCompress)()).pipe(res);\n                (0, stream_1.pipeline)(readStream, (0, zlib_1.createBrotliCompress)(), res, onError);\n                break;\n            case \"gzip\":\n                res.writeHead(200, { \"content-encoding\": \"gzip\" });\n                (0, stream_1.pipeline)(readStream, (0, zlib_1.createGzip)(), res, onError);\n                break;\n            case \"deflate\":\n                res.writeHead(200, { \"content-encoding\": \"deflate\" });\n                (0, stream_1.pipeline)(readStream, (0, zlib_1.createDeflate)(), res, onError);\n                break;\n            default:\n                res.writeHead(200);\n                (0, stream_1.pipeline)(readStream, res, onError);\n        }\n    }\n    /**\n     * Binds socket.io to an engine.io instance.\n     *\n     * @param {engine.Server} engine engine.io (or compatible) server\n     * @return self\n     */\n    bind(engine) {\n        this.engine = engine;\n        this.engine.on(\"connection\", this.onconnection.bind(this));\n        return this;\n    }\n    /**\n     * Called with each incoming transport connection.\n     *\n     * @param {engine.Socket} conn\n     * @return self\n     * @private\n     */\n    onconnection(conn) {\n        debug(\"incoming connection with id %s\", conn.id);\n        const client = new client_1.Client(this, conn);\n        if (conn.protocol === 3) {\n            // @ts-ignore\n            client.connect(\"/\");\n        }\n        return this;\n    }\n    /**\n     * Looks up a namespace.\n     *\n     * @example\n     * // with a simple string\n     * const myNamespace = io.of(\"/my-namespace\");\n     *\n     * // with a regex\n     * const dynamicNsp = io.of(/^\\/dynamic-\\d+$/).on(\"connection\", (socket) => {\n     *   const namespace = socket.nsp; // newNamespace.name === \"/dynamic-101\"\n     *\n     *   // broadcast to all clients in the given sub-namespace\n     *   namespace.emit(\"hello\");\n     * });\n     *\n     * @param name - nsp name\n     * @param fn optional, nsp `connection` ev handler\n     */\n    of(name, fn) {\n        if (typeof name === \"function\" || name instanceof RegExp) {\n            const parentNsp = new parent_namespace_1.ParentNamespace(this);\n            debug(\"initializing parent namespace %s\", parentNsp.name);\n            if (typeof name === \"function\") {\n                this.parentNsps.set(name, parentNsp);\n            }\n            else {\n                this.parentNsps.set((nsp, conn, next) => next(null, name.test(nsp)), parentNsp);\n            }\n            if (fn) {\n                // @ts-ignore\n                parentNsp.on(\"connect\", fn);\n            }\n            return parentNsp;\n        }\n        if (String(name)[0] !== \"/\")\n            name = \"/\" + name;\n        let nsp = this._nsps.get(name);\n        if (!nsp) {\n            debug(\"initializing namespace %s\", name);\n            nsp = new namespace_1.Namespace(this, name);\n            this._nsps.set(name, nsp);\n            if (name !== \"/\") {\n                // @ts-ignore\n                this.sockets.emitReserved(\"new_namespace\", nsp);\n            }\n        }\n        if (fn)\n            nsp.on(\"connect\", fn);\n        return nsp;\n    }\n    /**\n     * Closes server connection\n     *\n     * @param [fn] optional, called as `fn([err])` on error OR all conns closed\n     */\n    close(fn) {\n        for (const socket of this.sockets.sockets.values()) {\n            socket._onclose(\"server shutting down\");\n        }\n        this.engine.close();\n        // restore the Adapter prototype\n        (0, uws_1.restoreAdapter)();\n        if (this.httpServer) {\n            this.httpServer.close(fn);\n        }\n        else {\n            fn && fn();\n        }\n    }\n    /**\n     * Registers a middleware, which is a function that gets executed for every incoming {@link Socket}.\n     *\n     * @example\n     * io.use((socket, next) => {\n     *   // ...\n     *   next();\n     * });\n     *\n     * @param fn - the middleware function\n     */\n    use(fn) {\n        this.sockets.use(fn);\n        return this;\n    }\n    /**\n     * Targets a room when emitting.\n     *\n     * @example\n     * // the “foo” event will be broadcast to all connected clients in the “room-101” room\n     * io.to(\"room-101\").emit(\"foo\", \"bar\");\n     *\n     * // with an array of rooms (a client will be notified at most once)\n     * io.to([\"room-101\", \"room-102\"]).emit(\"foo\", \"bar\");\n     *\n     * // with multiple chained calls\n     * io.to(\"room-101\").to(\"room-102\").emit(\"foo\", \"bar\");\n     *\n     * @param room - a room, or an array of rooms\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    to(room) {\n        return this.sockets.to(room);\n    }\n    /**\n     * Targets a room when emitting. Similar to `to()`, but might feel clearer in some cases:\n     *\n     * @example\n     * // disconnect all clients in the \"room-101\" room\n     * io.in(\"room-101\").disconnectSockets();\n     *\n     * @param room - a room, or an array of rooms\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    in(room) {\n        return this.sockets.in(room);\n    }\n    /**\n     * Excludes a room when emitting.\n     *\n     * @example\n     * // the \"foo\" event will be broadcast to all connected clients, except the ones that are in the \"room-101\" room\n     * io.except(\"room-101\").emit(\"foo\", \"bar\");\n     *\n     * // with an array of rooms\n     * io.except([\"room-101\", \"room-102\"]).emit(\"foo\", \"bar\");\n     *\n     * // with multiple chained calls\n     * io.except(\"room-101\").except(\"room-102\").emit(\"foo\", \"bar\");\n     *\n     * @param room - a room, or an array of rooms\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    except(room) {\n        return this.sockets.except(room);\n    }\n    /**\n     * Sends a `message` event to all clients.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * io.send(\"hello\");\n     *\n     * // this is equivalent to\n     * io.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        this.sockets.emit(\"message\", ...args);\n        return this;\n    }\n    /**\n     * Sends a `message` event to all clients. Alias of {@link send}.\n     *\n     * @return self\n     */\n    write(...args) {\n        this.sockets.emit(\"message\", ...args);\n        return this;\n    }\n    /**\n     * Sends a message to the other Socket.IO servers of the cluster.\n     *\n     * @example\n     * io.serverSideEmit(\"hello\", \"world\");\n     *\n     * io.on(\"hello\", (arg1) => {\n     *   console.log(arg1); // prints \"world\"\n     * });\n     *\n     * // acknowledgements (without binary content) are supported too:\n     * io.serverSideEmit(\"ping\", (err, responses) => {\n     *  if (err) {\n     *     // some clients did not acknowledge the event in the given delay\n     *   } else {\n     *     console.log(responses); // one response per client\n     *   }\n     * });\n     *\n     * io.on(\"ping\", (cb) => {\n     *   cb(\"pong\");\n     * });\n     *\n     * @param ev - the event name\n     * @param args - an array of arguments, which may include an acknowledgement callback at the end\n     */\n    serverSideEmit(ev, ...args) {\n        return this.sockets.serverSideEmit(ev, ...args);\n    }\n    /**\n     * Gets a list of socket ids.\n     *\n     * @deprecated this method will be removed in the next major release, please use {@link Server#serverSideEmit} or\n     * {@link Server#fetchSockets} instead.\n     */\n    allSockets() {\n        return this.sockets.allSockets();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * io.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    compress(compress) {\n        return this.sockets.compress(compress);\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event data may be lost if the client is not ready to\n     * receive messages (because of network slowness or other issues, or because they’re connected through long polling\n     * and is in the middle of a request-response cycle).\n     *\n     * @example\n     * io.volatile.emit(\"hello\"); // the clients may or may not receive it\n     *\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    get volatile() {\n        return this.sockets.volatile;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event data will only be broadcast to the current node.\n     *\n     * @example\n     * // the “foo” event will be broadcast to all connected clients on this node\n     * io.local.emit(\"foo\", \"bar\");\n     *\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    get local() {\n        return this.sockets.local;\n    }\n    /**\n     * Adds a timeout in milliseconds for the next operation.\n     *\n     * @example\n     * io.timeout(1000).emit(\"some-event\", (err, responses) => {\n     *   if (err) {\n     *     // some clients did not acknowledge the event in the given delay\n     *   } else {\n     *     console.log(responses); // one response per client\n     *   }\n     * });\n     *\n     * @param timeout\n     */\n    timeout(timeout) {\n        return this.sockets.timeout(timeout);\n    }\n    /**\n     * Returns the matching socket instances.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     * // return all Socket instances\n     * const sockets = await io.fetchSockets();\n     *\n     * // return all Socket instances in the \"room1\" room\n     * const sockets = await io.in(\"room1\").fetchSockets();\n     *\n     * for (const socket of sockets) {\n     *   console.log(socket.id);\n     *   console.log(socket.handshake);\n     *   console.log(socket.rooms);\n     *   console.log(socket.data);\n     *\n     *   socket.emit(\"hello\");\n     *   socket.join(\"room1\");\n     *   socket.leave(\"room2\");\n     *   socket.disconnect();\n     * }\n     */\n    fetchSockets() {\n        return this.sockets.fetchSockets();\n    }\n    /**\n     * Makes the matching socket instances join the specified rooms.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     *\n     * // make all socket instances join the \"room1\" room\n     * io.socketsJoin(\"room1\");\n     *\n     * // make all socket instances in the \"room1\" room join the \"room2\" and \"room3\" rooms\n     * io.in(\"room1\").socketsJoin([\"room2\", \"room3\"]);\n     *\n     * @param room - a room, or an array of rooms\n     */\n    socketsJoin(room) {\n        return this.sockets.socketsJoin(room);\n    }\n    /**\n     * Makes the matching socket instances leave the specified rooms.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     * // make all socket instances leave the \"room1\" room\n     * io.socketsLeave(\"room1\");\n     *\n     * // make all socket instances in the \"room1\" room leave the \"room2\" and \"room3\" rooms\n     * io.in(\"room1\").socketsLeave([\"room2\", \"room3\"]);\n     *\n     * @param room - a room, or an array of rooms\n     */\n    socketsLeave(room) {\n        return this.sockets.socketsLeave(room);\n    }\n    /**\n     * Makes the matching socket instances disconnect.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     * // make all socket instances disconnect (the connections might be kept alive for other namespaces)\n     * io.disconnectSockets();\n     *\n     * // make all socket instances in the \"room1\" room disconnect and close the underlying connections\n     * io.in(\"room1\").disconnectSockets(true);\n     *\n     * @param close - whether to close the underlying connection\n     */\n    disconnectSockets(close = false) {\n        return this.sockets.disconnectSockets(close);\n    }\n}\nexports.Server = Server;\n/**\n * Expose main namespace (/).\n */\nconst emitterMethods = Object.keys(events_1.EventEmitter.prototype).filter(function (key) {\n    return typeof events_1.EventEmitter.prototype[key] === \"function\";\n});\nemitterMethods.forEach(function (fn) {\n    Server.prototype[fn] = function () {\n        return this.sockets[fn].apply(this.sockets, arguments);\n    };\n});\nmodule.exports = (srv, opts) => new Server(srv, opts);\nmodule.exports.Server = Server;\nmodule.exports.Namespace = namespace_1.Namespace;\nmodule.exports.Socket = socket_1.Socket;\nvar socket_2 = require(\"./socket\");\n"],"mappings":"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AAE,CAACC,IAAI,CAAC;EAChC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,EAAE,CAACD,IAAI,EAAE;IACL,OAAO,IAAI,CAAC3G,OAAO,CAAC4G,EAAE,CAACD,IAAI,CAAC;EAChC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIE,MAAM,CAACF,IAAI,EAAE;IACT,OAAO,IAAI,CAAC3G,OAAO,CAAC6G,MAAM,CAACF,IAAI,CAAC;EACpC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIG,IAAI,GAAU;IAAA,kCAANC,IAAI;MAAJA,IAAI;IAAA;IACR,IAAI,CAAC/G,OAAO,CAACgH,IAAI,CAAC,SAAS,EAAE,GAAGD,IAAI,CAAC;IACrC,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;EACIE,KAAK,GAAU;IAAA,mCAANF,IAAI;MAAJA,IAAI;IAAA;IACT,IAAI,CAAC/G,OAAO,CAACgH,IAAI,CAAC,SAAS,EAAE,GAAGD,IAAI,CAAC;IACrC,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIG,cAAc,CAACC,EAAE,EAAW;IAAA,mCAANJ,IAAI;MAAJA,IAAI;IAAA;IACtB,OAAO,IAAI,CAAC/G,OAAO,CAACkH,cAAc,CAACC,EAAE,EAAE,GAAGJ,IAAI,CAAC;EACnD;EACA;AACJ;AACA;AACA;AACA;AACA;EACIK,UAAU,GAAG;IACT,OAAO,IAAI,CAACpH,OAAO,CAACoH,UAAU,EAAE;EACpC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,QAAQ,CAACA,QAAQ,EAAE;IACf,OAAO,IAAI,CAACrH,OAAO,CAACqH,QAAQ,CAACA,QAAQ,CAAC;EAC1C;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,IAAIC,QAAQ,GAAG;IACX,OAAO,IAAI,CAACtH,OAAO,CAACsH,QAAQ;EAChC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,IAAIC,KAAK,GAAG;IACR,OAAO,IAAI,CAACvH,OAAO,CAACuH,KAAK;EAC7B;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,OAAO,CAACA,OAAO,EAAE;IACb,OAAO,IAAI,CAACxH,OAAO,CAACwH,OAAO,CAACA,OAAO,CAAC;EACxC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,YAAY,GAAG;IACX,OAAO,IAAI,CAACzH,OAAO,CAACyH,YAAY,EAAE;EACtC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,WAAW,CAACf,IAAI,EAAE;IACd,OAAO,IAAI,CAAC3G,OAAO,CAAC0H,WAAW,CAACf,IAAI,CAAC;EACzC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIgB,YAAY,CAAChB,IAAI,EAAE;IACf,OAAO,IAAI,CAAC3G,OAAO,CAAC2H,YAAY,CAAChB,IAAI,CAAC;EAC1C;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIiB,iBAAiB,GAAgB;IAAA,IAAfvB,KAAK,uEAAG,KAAK;IAC3B,OAAO,IAAI,CAACrG,OAAO,CAAC4H,iBAAiB,CAACvB,KAAK,CAAC;EAChD;AACJ;AACA/I,OAAO,CAACG,MAAM,GAAGA,MAAM;AACvB;AACA;AACA;AACA,MAAMoK,cAAc,GAAGhM,MAAM,CAAC+E,IAAI,CAACzC,QAAQ,CAAC2J,YAAY,CAAC5K,SAAS,CAAC,CAAC6K,MAAM,CAAC,UAAUC,GAAG,EAAE;EACtF,OAAO,OAAO7J,QAAQ,CAAC2J,YAAY,CAAC5K,SAAS,CAAC8K,GAAG,CAAC,KAAK,UAAU;AACrE,CAAC,CAAC;AACFH,cAAc,CAACI,OAAO,CAAC,UAAUxH,EAAE,EAAE;EACjChD,MAAM,CAACP,SAAS,CAACuD,EAAE,CAAC,GAAG,YAAY;IAC/B,OAAO,IAAI,CAACT,OAAO,CAACS,EAAE,CAAC,CAACyH,KAAK,CAAC,IAAI,CAAClI,OAAO,EAAEG,SAAS,CAAC;EAC1D,CAAC;AACL,CAAC,CAAC;AACFgI,MAAM,CAAC7K,OAAO,GAAG,CAAC6B,GAAG,EAAEC,IAAI,KAAK,IAAI3B,MAAM,CAAC0B,GAAG,EAAEC,IAAI,CAAC;AACrD+I,MAAM,CAAC7K,OAAO,CAACG,MAAM,GAAGA,MAAM;AAC9B0K,MAAM,CAAC7K,OAAO,CAACC,SAAS,GAAGa,WAAW,CAACb,SAAS;AAChD4K,MAAM,CAAC7K,OAAO,CAACE,MAAM,GAAGiB,QAAQ,CAACjB,MAAM;AACvC,IAAI4K,QAAQ,GAAGzK,OAAO,CAAC,UAAU,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}