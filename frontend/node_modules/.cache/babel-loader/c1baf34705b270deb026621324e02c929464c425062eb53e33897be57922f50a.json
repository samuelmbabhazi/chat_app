{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.uServer = void 0;\nconst debug_1 = require(\"debug\");\nconst server_1 = require(\"./server\");\nconst transports_uws_1 = require(\"./transports-uws\");\nconst debug = (0, debug_1.default)(\"engine:uws\");\nclass uServer extends server_1.BaseServer {\n  init() {}\n  cleanup() {}\n  /**\n   * Prepares a request by processing the query string.\n   *\n   * @api private\n   */\n  prepare(req, res) {\n    req.method = req.getMethod().toUpperCase();\n    const params = new URLSearchParams(req.getQuery());\n    req._query = Object.fromEntries(params.entries());\n    req.headers = {};\n    req.forEach((key, value) => {\n      req.headers[key] = value;\n    });\n    req.connection = {\n      remoteAddress: Buffer.from(res.getRemoteAddressAsText()).toString()\n    };\n    res.onAborted(() => {\n      debug(\"response has been aborted\");\n    });\n  }\n  createTransport(transportName, req) {\n    return new transports_uws_1.default[transportName](req);\n  }\n  /**\n   * Attach the engine to a µWebSockets.js server\n   * @param app\n   * @param options\n   */\n  attach(app /* : TemplatedApp */) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const path = (options.path || \"/engine.io\").replace(/\\/$/, \"\") + \"/\";\n    app.any(path, this.handleRequest.bind(this))\n    //\n    .ws(path, {\n      compression: options.compression,\n      idleTimeout: options.idleTimeout,\n      maxBackpressure: options.maxBackpressure,\n      maxPayloadLength: this.opts.maxHttpBufferSize,\n      upgrade: this.handleUpgrade.bind(this),\n      open: ws => {\n        ws.transport.socket = ws;\n        ws.transport.writable = true;\n        ws.transport.emit(\"drain\");\n      },\n      message: (ws, message, isBinary) => {\n        ws.transport.onData(isBinary ? message : Buffer.from(message).toString());\n      },\n      close: (ws, code, message) => {\n        ws.transport.onClose(code, message);\n      }\n    });\n  }\n  handleRequest(res, req) {\n    debug('handling \"%s\" http request \"%s\"', req.getMethod(), req.getUrl());\n    this.prepare(req, res);\n    req.res = res;\n    const callback = (errorCode, errorContext) => {\n      if (errorCode !== undefined) {\n        this.emit(\"connection_error\", {\n          req,\n          code: errorCode,\n          message: server_1.Server.errorMessages[errorCode],\n          context: errorContext\n        });\n        this.abortRequest(req.res, errorCode, errorContext);\n        return;\n      }\n      if (req._query.sid) {\n        debug(\"setting new request for existing client\");\n        this.clients[req._query.sid].transport.onRequest(req);\n      } else {\n        const closeConnection = (errorCode, errorContext) => this.abortRequest(res, errorCode, errorContext);\n        this.handshake(req._query.transport, req, closeConnection);\n      }\n    };\n    if (this.corsMiddleware) {\n      // needed to buffer headers until the status is computed\n      req.res = new ResponseWrapper(res);\n      this.corsMiddleware.call(null, req, req.res, () => {\n        this.verify(req, false, callback);\n      });\n    } else {\n      this.verify(req, false, callback);\n    }\n  }\n  handleUpgrade(res, req, context) {\n    debug(\"on upgrade\");\n    this.prepare(req, res);\n    // @ts-ignore\n    req.res = res;\n    this.verify(req, true, async (errorCode, errorContext) => {\n      if (errorCode) {\n        this.emit(\"connection_error\", {\n          req,\n          code: errorCode,\n          message: server_1.Server.errorMessages[errorCode],\n          context: errorContext\n        });\n        this.abortRequest(res, errorCode, errorContext);\n        return;\n      }\n      const id = req._query.sid;\n      let transport;\n      if (id) {\n        const client = this.clients[id];\n        if (!client) {\n          debug(\"upgrade attempt for closed client\");\n          res.close();\n        } else if (client.upgrading) {\n          debug(\"transport has already been trying to upgrade\");\n          res.close();\n        } else if (client.upgraded) {\n          debug(\"transport had already been upgraded\");\n          res.close();\n        } else {\n          debug(\"upgrading existing transport\");\n          transport = this.createTransport(req._query.transport, req);\n          client.maybeUpgrade(transport);\n        }\n      } else {\n        transport = await this.handshake(req._query.transport, req, (errorCode, errorContext) => this.abortRequest(res, errorCode, errorContext));\n        if (!transport) {\n          return;\n        }\n      }\n      res.upgrade({\n        transport\n      }, req.getHeader(\"sec-websocket-key\"), req.getHeader(\"sec-websocket-protocol\"), req.getHeader(\"sec-websocket-extensions\"), context);\n    });\n  }\n  abortRequest(res, errorCode, errorContext) {\n    const statusCode = errorCode === server_1.Server.errors.FORBIDDEN ? \"403 Forbidden\" : \"400 Bad Request\";\n    const message = errorContext && errorContext.message ? errorContext.message : server_1.Server.errorMessages[errorCode];\n    res.writeStatus(statusCode);\n    res.writeHeader(\"Content-Type\", \"application/json\");\n    res.end(JSON.stringify({\n      code: errorCode,\n      message\n    }));\n  }\n}\nexports.uServer = uServer;\nclass ResponseWrapper {\n  constructor(res) {\n    this.res = res;\n    this.statusWritten = false;\n    this.headers = [];\n  }\n  set statusCode(status) {\n    this.writeStatus(status === 200 ? \"200 OK\" : \"204 No Content\");\n  }\n  setHeader(key, value) {\n    this.writeHeader(key, value);\n  }\n  // needed by vary: https://github.com/jshttp/vary/blob/5d725d059b3871025cf753e9dfa08924d0bcfa8f/index.js#L134\n  getHeader() {}\n  writeStatus(status) {\n    this.res.writeStatus(status);\n    this.statusWritten = true;\n    this.writeBufferedHeaders();\n  }\n  writeHeader(key, value) {\n    if (key === \"Content-Length\") {\n      // the content length is automatically added by uWebSockets.js\n      return;\n    }\n    if (this.statusWritten) {\n      this.res.writeHeader(key, value);\n    } else {\n      this.headers.push([key, value]);\n    }\n  }\n  writeBufferedHeaders() {\n    this.headers.forEach(_ref => {\n      let [key, value] = _ref;\n      this.res.writeHeader(key, value);\n    });\n  }\n  end(data) {\n    if (!this.statusWritten) {\n      // status will be inferred as \"200 OK\"\n      this.writeBufferedHeaders();\n    }\n    this.res.end(data);\n  }\n  onData(fn) {\n    this.res.onData(fn);\n  }\n  onAborted(fn) {\n    this.res.onAborted(fn);\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","uServer","debug_1","require","server_1","transports_uws_1","debug","default","BaseServer","init","cleanup","prepare","req","res","method","getMethod","toUpperCase","params","URLSearchParams","getQuery","_query","fromEntries","entries","headers","forEach","key","connection","remoteAddress","Buffer","from","getRemoteAddressAsText","toString","onAborted","createTransport","transportName","attach","app","options","path","replace","any","handleRequest","bind","ws","compression","idleTimeout","maxBackpressure","maxPayloadLength","opts","maxHttpBufferSize","upgrade","handleUpgrade","open","transport","socket","writable","emit","message","isBinary","onData","close","code","onClose","getUrl","callback","errorCode","errorContext","undefined","Server","errorMessages","context","abortRequest","sid","clients","onRequest","closeConnection","handshake","corsMiddleware","ResponseWrapper","call","verify","id","client","upgrading","upgraded","maybeUpgrade","getHeader","statusCode","errors","FORBIDDEN","writeStatus","writeHeader","end","JSON","stringify","constructor","statusWritten","status","setHeader","writeBufferedHeaders","push","data","fn"],"sources":["/home/samuel/Documents/chatApp/node_modules/engine.io/build/userver.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uServer = void 0;\nconst debug_1 = require(\"debug\");\nconst server_1 = require(\"./server\");\nconst transports_uws_1 = require(\"./transports-uws\");\nconst debug = (0, debug_1.default)(\"engine:uws\");\nclass uServer extends server_1.BaseServer {\n    init() { }\n    cleanup() { }\n    /**\n     * Prepares a request by processing the query string.\n     *\n     * @api private\n     */\n    prepare(req, res) {\n        req.method = req.getMethod().toUpperCase();\n        const params = new URLSearchParams(req.getQuery());\n        req._query = Object.fromEntries(params.entries());\n        req.headers = {};\n        req.forEach((key, value) => {\n            req.headers[key] = value;\n        });\n        req.connection = {\n            remoteAddress: Buffer.from(res.getRemoteAddressAsText()).toString()\n        };\n        res.onAborted(() => {\n            debug(\"response has been aborted\");\n        });\n    }\n    createTransport(transportName, req) {\n        return new transports_uws_1.default[transportName](req);\n    }\n    /**\n     * Attach the engine to a µWebSockets.js server\n     * @param app\n     * @param options\n     */\n    attach(app /* : TemplatedApp */, options = {}) {\n        const path = (options.path || \"/engine.io\").replace(/\\/$/, \"\") + \"/\";\n        app\n            .any(path, this.handleRequest.bind(this))\n            //\n            .ws(path, {\n            compression: options.compression,\n            idleTimeout: options.idleTimeout,\n            maxBackpressure: options.maxBackpressure,\n            maxPayloadLength: this.opts.maxHttpBufferSize,\n            upgrade: this.handleUpgrade.bind(this),\n            open: ws => {\n                ws.transport.socket = ws;\n                ws.transport.writable = true;\n                ws.transport.emit(\"drain\");\n            },\n            message: (ws, message, isBinary) => {\n                ws.transport.onData(isBinary ? message : Buffer.from(message).toString());\n            },\n            close: (ws, code, message) => {\n                ws.transport.onClose(code, message);\n            }\n        });\n    }\n    handleRequest(res, req) {\n        debug('handling \"%s\" http request \"%s\"', req.getMethod(), req.getUrl());\n        this.prepare(req, res);\n        req.res = res;\n        const callback = (errorCode, errorContext) => {\n            if (errorCode !== undefined) {\n                this.emit(\"connection_error\", {\n                    req,\n                    code: errorCode,\n                    message: server_1.Server.errorMessages[errorCode],\n                    context: errorContext\n                });\n                this.abortRequest(req.res, errorCode, errorContext);\n                return;\n            }\n            if (req._query.sid) {\n                debug(\"setting new request for existing client\");\n                this.clients[req._query.sid].transport.onRequest(req);\n            }\n            else {\n                const closeConnection = (errorCode, errorContext) => this.abortRequest(res, errorCode, errorContext);\n                this.handshake(req._query.transport, req, closeConnection);\n            }\n        };\n        if (this.corsMiddleware) {\n            // needed to buffer headers until the status is computed\n            req.res = new ResponseWrapper(res);\n            this.corsMiddleware.call(null, req, req.res, () => {\n                this.verify(req, false, callback);\n            });\n        }\n        else {\n            this.verify(req, false, callback);\n        }\n    }\n    handleUpgrade(res, req, context) {\n        debug(\"on upgrade\");\n        this.prepare(req, res);\n        // @ts-ignore\n        req.res = res;\n        this.verify(req, true, async (errorCode, errorContext) => {\n            if (errorCode) {\n                this.emit(\"connection_error\", {\n                    req,\n                    code: errorCode,\n                    message: server_1.Server.errorMessages[errorCode],\n                    context: errorContext\n                });\n                this.abortRequest(res, errorCode, errorContext);\n                return;\n            }\n            const id = req._query.sid;\n            let transport;\n            if (id) {\n                const client = this.clients[id];\n                if (!client) {\n                    debug(\"upgrade attempt for closed client\");\n                    res.close();\n                }\n                else if (client.upgrading) {\n                    debug(\"transport has already been trying to upgrade\");\n                    res.close();\n                }\n                else if (client.upgraded) {\n                    debug(\"transport had already been upgraded\");\n                    res.close();\n                }\n                else {\n                    debug(\"upgrading existing transport\");\n                    transport = this.createTransport(req._query.transport, req);\n                    client.maybeUpgrade(transport);\n                }\n            }\n            else {\n                transport = await this.handshake(req._query.transport, req, (errorCode, errorContext) => this.abortRequest(res, errorCode, errorContext));\n                if (!transport) {\n                    return;\n                }\n            }\n            res.upgrade({\n                transport\n            }, req.getHeader(\"sec-websocket-key\"), req.getHeader(\"sec-websocket-protocol\"), req.getHeader(\"sec-websocket-extensions\"), context);\n        });\n    }\n    abortRequest(res, errorCode, errorContext) {\n        const statusCode = errorCode === server_1.Server.errors.FORBIDDEN\n            ? \"403 Forbidden\"\n            : \"400 Bad Request\";\n        const message = errorContext && errorContext.message\n            ? errorContext.message\n            : server_1.Server.errorMessages[errorCode];\n        res.writeStatus(statusCode);\n        res.writeHeader(\"Content-Type\", \"application/json\");\n        res.end(JSON.stringify({\n            code: errorCode,\n            message\n        }));\n    }\n}\nexports.uServer = uServer;\nclass ResponseWrapper {\n    constructor(res) {\n        this.res = res;\n        this.statusWritten = false;\n        this.headers = [];\n    }\n    set statusCode(status) {\n        this.writeStatus(status === 200 ? \"200 OK\" : \"204 No Content\");\n    }\n    setHeader(key, value) {\n        this.writeHeader(key, value);\n    }\n    // needed by vary: https://github.com/jshttp/vary/blob/5d725d059b3871025cf753e9dfa08924d0bcfa8f/index.js#L134\n    getHeader() { }\n    writeStatus(status) {\n        this.res.writeStatus(status);\n        this.statusWritten = true;\n        this.writeBufferedHeaders();\n    }\n    writeHeader(key, value) {\n        if (key === \"Content-Length\") {\n            // the content length is automatically added by uWebSockets.js\n            return;\n        }\n        if (this.statusWritten) {\n            this.res.writeHeader(key, value);\n        }\n        else {\n            this.headers.push([key, value]);\n        }\n    }\n    writeBufferedHeaders() {\n        this.headers.forEach(([key, value]) => {\n            this.res.writeHeader(key, value);\n        });\n    }\n    end(data) {\n        if (!this.statusWritten) {\n            // status will be inferred as \"200 OK\"\n            this.writeBufferedHeaders();\n        }\n        this.res.end(data);\n    }\n    onData(fn) {\n        this.res.onData(fn);\n    }\n    onAborted(fn) {\n        this.res.onAborted(fn);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}