{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Documents/chatApp/public/src/components/Contacts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Contacts = _ref => {\n  _s();\n  let {\n    contacts,\n    currentUser\n  } = _ref;\n  const [currentUserName, setCurrentUserName] = useState(undefined);\n  const [currentSelected, setCurrentSelected] = useState(undefined);\n  useEffect(() => {\n    if (currentUser) {\n      setCurrentUserName(currentUser.username);\n    }\n  }, [currentUser]);\n  const changeCurrentChat = (index, contact) => {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentUserName && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contacts\",\n        children: contacts.map((contaxt, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"username\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: contact.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Contacts, \"sMyYTo6/1nM5CNi1gFO9ApYWsLY=\");\n_c = Contacts;\nexport default Contacts;\nvar _c;\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"names":["React","useEffect","useState","Contacts","contacts","currentUser","currentUserName","setCurrentUserName","undefined","currentSelected","setCurrentSelected","username","changeCurrentChat","index","contact","map","contaxt"],"sources":["/home/samuel/Documents/chatApp/public/src/components/Contacts.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst Contacts = ({ contacts, currentUser }) => {\n  const [currentUserName, setCurrentUserName] = useState(undefined);\n  const [currentSelected, setCurrentSelected] = useState(undefined);\n  useEffect(() => {\n    if (currentUser) {\n      setCurrentUserName(currentUser.username);\n    }\n  }, [currentUser]);\n  const changeCurrentChat = (index, contact) => {};\n  return (\n    <>\n      {currentUserName && (\n        <div>\n          <div className=\"contacts\">\n            {contacts.map((contaxt, index) => {\n              return (\n                <div className=\"contact\" key={index}>\n                  <div className=\"avatar\">\n                    <img src=\"\" alt=\"\" />\n                  </div>\n                  <div className=\"username\">\n                    <h3>{contact.username}</h3>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Contacts;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAEnD,MAAMC,QAAQ,GAAG,QAA+B;EAAA;EAAA,IAA9B;IAAEC,QAAQ;IAAEC;EAAY,CAAC;EACzC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGL,QAAQ,CAACM,SAAS,CAAC;EACjE,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAACM,SAAS,CAAC;EACjEP,SAAS,CAAC,MAAM;IACd,IAAII,WAAW,EAAE;MACfE,kBAAkB,CAACF,WAAW,CAACM,QAAQ,CAAC;IAC1C;EACF,CAAC,EAAE,CAACN,WAAW,CAAC,CAAC;EACjB,MAAMO,iBAAiB,GAAG,CAACC,KAAK,EAAEC,OAAO,KAAK,CAAC,CAAC;EAChD,oBACE;IAAA,UACGR,eAAe,iBACd;MAAA,uBACE;QAAK,SAAS,EAAC,UAAU;QAAA,UACtBF,QAAQ,CAACW,GAAG,CAAC,CAACC,OAAO,EAAEH,KAAK,KAAK;UAChC,oBACE;YAAK,SAAS,EAAC,SAAS;YAAA,wBACtB;cAAK,SAAS,EAAC,QAAQ;cAAA,uBACrB;gBAAK,GAAG,EAAC,EAAE;gBAAC,GAAG,EAAC;cAAE;gBAAA;gBAAA;gBAAA;cAAA;YAAG;cAAA;cAAA;cAAA;YAAA,QACjB,eACN;cAAK,SAAS,EAAC,UAAU;cAAA,uBACvB;gBAAA,UAAKC,OAAO,CAACH;cAAQ;gBAAA;gBAAA;gBAAA;cAAA;YAAM;cAAA;cAAA;cAAA;YAAA,QACvB;UAAA,GANsBE,KAAK;YAAA;YAAA;YAAA;UAAA,QAO7B;QAEV,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA;IACE;MAAA;MAAA;MAAA;IAAA;EAET,iBACA;AAEP,CAAC;AAAC,GA/BIV,QAAQ;AAAA,KAARA,QAAQ;AAiCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}